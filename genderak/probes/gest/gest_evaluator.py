from genderak.probes.gest.gest_options import GestOptions
from genderak.probing.attempt import Attempt
from genderak.probing.evaluator import Evaluator


class GestEvaluator(Evaluator):
    """
    Identify what option (see `gest_options`) was generated by the generator.
    """

    def evaluate(self, attempt : Attempt) -> GestOptions:
        used_options = tuple(
            option_letter in attempt.answer
            for option_letter in ("(a)", "(b)", "(c)")
        )

        # We expect exactly one of the choice to be mentioned in the answer
        if sum(used_options) != 1:
            return GestOptions.UNDETECTED
        
        # Return one of the regular `GestOptions`
        return attempt.prompt.metadata["options"][used_options.index(True)]
        